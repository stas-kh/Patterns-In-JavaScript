{"version":3,"sources":["d.js"],"names":[],"mappings":"AAAA;;;;;;;;;;IAEM;;;;;;;qCACc;;;8BAGP;;;4BAGF;;;QAPL;;;IAWA;;;AACL,UADK,gBACL,CAAY,eAAZ,EAA6B;wBADxB,kBACwB;;qEADxB,8BACwB;;AAE5B,QAAK,UAAL,GAAkB,eAAlB,CAF4B;;EAA7B;;cADK;;qCAMc;AAClB,QAAK,EAAL,GAAU,IAAI,SAAJ,CAAc,KAAK,UAAL,CAAxB,CADkB;AAElB,QAAK,EAAL,CAAQ,MAAR,GAAiB,KAAK,SAAL,CAFC;AAGlB,QAAK,EAAL,CAAQ,OAAR,GAAkB,KAAK,OAAL,CAHA;;;;8BAMP;AACX,WAAQ,GAAR,CAAY,2BAAZ,EADW;;;;4BAIF;AACT,SAAM,IAAI,KAAJ,CAAU,0CAAV,CAAN,CADS;;;;QAhBL;EAAyB;;IAqBzB;;;AACL,UADK,cACL,CAAY,gBAAZ,EAA8B;wBADzB,gBACyB;;sEADzB,4BACyB;;AAE7B,SAAK,UAAL,GAAkB,gBAAlB,CAF6B;;EAA9B;;cADK;;qCAMc;AAClB,OAAI,OAAO,IAAP,CADc;;AAGlB,QAAK,GAAL,GAAW,IAAI,cAAJ,EAAX,CAHkB;AAIlB,QAAK,GAAL,CAAS,IAAT,CAAc,KAAd,EAAqB,KAAK,UAAL,EAAiB,IAAtC,EAJkB;AAKlB,QAAK,GAAL,CAAS,kBAAT,GAA8B,UAAU,IAAV,EAAgB;AAC7C,QAAI,KAAK,GAAL,CAAS,UAAT,IAAuB,CAAvB,EAA0B;AAC7B,SAAI,KAAK,GAAL,CAAS,MAAT,IAAmB,GAAnB,EAAwB;AAC3B,WAAK,SAAL,GAD2B;MAA5B,MAEO;AACN,WAAK,OAAL,GADM;MAFP;KADD;IAD6B,CALZ;AAclB,QAAK,GAAL,CAAS,IAAT,CAAc,IAAd,EAdkB;;;;8BAiBP;AACX,WAAQ,IAAR,CAAa,+BAAb,EADW;;;;4BAIF;AACT,SAAM,IAAI,KAAJ,CAAU,6BAAV,CAAN,CADS;;;;QA3BL;EAAuB;;IAgCvB;;;;;;;0CACmB,sBAAsB;AAC7C,QAAK,WAAL,GAAmB,oBAAnB,CAD6C;AAE7C,QAAK,4BAAL,GAF6C;;;;iDAKf;AAC9B,OAAI,EAAE,KAAK,WAAL,YAA4B,oBAA5B,CAAF,EAAqD;AACxD,UAAM,IAAI,SAAJ,CAAc,sCAAd,CAAN,CADwD;IAAzD;;;;yBAKM;AACN,QAAK,WAAL,CAAiB,gBAAjB;;AADM;;;QAZF;;;AAkBN,IAAI,KAAK,IAAI,gBAAJ,CAAqB,yBAArB,CAAL;IACH,MAAM,IAAI,cAAJ,CAAmB,oBAAnB,CAAN;IACA,KAAK,IAAI,gBAAJ,EAAL;;AAED,GAAG,uBAAH,CAA2B,EAA3B;AACA,GAAG,IAAH","file":"d-compiled.js","sourcesContent":["'use strict';\r\n\r\nclass CommunicationManager {\r\n\tcreateConnection() {\r\n\t};\r\n\r\n\tonSuccess() {\r\n\t};\r\n\r\n\tonError() {\r\n\t};\r\n}\r\n\r\nclass WebSocketManager extends CommunicationManager {\r\n\tconstructor(pathToWebsocket) {\r\n\t\tsuper();\r\n\t\tthis.serverPath = pathToWebsocket;\r\n\t};\r\n\r\n\tcreateConnection() {\r\n\t\tthis.ws = new WebSocket(this.serverPath);\r\n\t\tthis.ws.onopen = this.onSuccess;\r\n\t\tthis.ws.onclose = this.onError;\r\n\t}\r\n\r\n\tonSuccess() {\r\n\t\tconsole.log(\"WebSocket works correctly\");\r\n\t}\r\n\r\n\tonError() {\r\n\t\tthrow new Error(\"Error during set connection to WebSocket\");\r\n\t}\r\n}\r\n\r\nclass XmlHTTPManager extends CommunicationManager {\r\n\tconstructor(pathToHTTPServer) {\r\n\t\tsuper();\r\n\t\tthis.serverPath = pathToHTTPServer;\r\n\t};\r\n\r\n\tcreateConnection() {\r\n\t\tvar self = this;\r\n\r\n\t\tself.req = new XMLHttpRequest();\r\n\t\tself.req.open('GET', this.serverPath, true);\r\n\t\tself.req.onreadystatechange = function (aEvt) {\r\n\t\t\tif (self.req.readyState == 4) {\r\n\t\t\t\tif (self.req.status == 200) {\r\n\t\t\t\t\tself.onSuccess();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tself.onError();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tself.req.send(null);\r\n\t}\r\n\r\n\tonSuccess() {\r\n\t\tconsole.info(\"XMLHttpRequest work correctly\");\r\n\t}\r\n\r\n\tonError() {\r\n\t\tthrow new Error(\"XMLHttpRequest doesn't work\");\r\n\t}\r\n}\r\n\r\nclass ConnectionTester {\r\n\tsetCommunicationManager(communicationManager) {\r\n\t\tthis.commManager = communicationManager;\r\n\t\tthis.validateCommunicationManager();\r\n\t}\r\n\r\n\tvalidateCommunicationManager() {\r\n\t\tif (!(this.commManager instanceof CommunicationManager)) {\r\n\t\t\tthrow new TypeError(\"Communication manager has wrong type\");\r\n\t\t}\r\n\t}\r\n\r\n\tinit() {\r\n\t\tthis.commManager.createConnection();\r\n\t\t/* other code */\r\n\t}\r\n}\r\n\r\nvar ws = new WebSocketManager(\"ws://echo.websocket.org\"),\r\n\txhr = new XmlHTTPManager(\"https://github.com\"),\r\n\tct = new ConnectionTester();\r\n\r\nct.setCommunicationManager(ws); // or we can change Manager to \"xhr\"\r\nct.init();"]}